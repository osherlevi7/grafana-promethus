# creating a docker-compose.yml file 
# which will define our prometheus and node-exporter services,
# as well as our monitoring bridge network.


version: '3'

# setting up the Docker network type.
networks:
  monitoring:
    driver: bridge
    
volumes:
  prometheus_data: {}
# setting up the node-exporter for prometheus
services:
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    # we mount some necessary paths from the host into the container in :ro >> read-only mode
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - 9100
    networks:
      - monitoring
# Setting up the monitoring system 
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    # The prometheus service persists its data to a local directory on the host at "./prometheus_data" 
    # Docker Compose will create this directory after starting the prometheus container.
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - 9090
    networks:
      - monitoring